*qfdiagnostics.txt* Highlight quickfix errors and show error messages in popup window.

Author:     bfrg <http://github.com/bfrg>
Website:    https://github.com/bfrg/vim-qf-diagnostics
License:    Same terms as Vim itself (see |license|)

==============================================================================
INTRODUCTION                                                  *qf-diagnostics*

- Highlight the diagnostics (of a project-build, linter, grep) stored in a
  |quickfix| list in the buffer and |sign-column|.
- Display the error message for the current line in a |popup-window| next to
  the cursor.

==============================================================================
POPUP WINDOW                                            *qf-diagnostics-popup*

*<plug>(qf-diagnostics-popup-quickfix)*
        Open a |popup-window| with the error message for the current line at
        the current cursor position. The plugin checks if the current
        |quickfix| list contains any errors for the current line. If the line
        contains several errors, all will be collected and displayed in the
        same popup.

        Example: >
            nmap gh <plug>(qf-diagnostics-popup-quickfix)
<
        Move the cursor in any direction or press CTRL-C to close the popup
        window.

        If not all quickfix errors (for the current line) fit into the popup
        window, a scrollbar will appear on the right side. The popup window
        can then be scrolled with CTRL-J and CTRL-K, or alternatively, using
        the mouse wheel.

*<plug>(qf-diagnostics-popup-loclist)*
        Same as above but checks the current |location-list| of the current
        window for errors.

        Example: >
            nmap gH <plug>(qf-diagnostics-popup-loclist)
<
==============================================================================
SIGNS AND TEXT HIGHLIGHTINGS                        *qf-diagnostics-highlight*

:DiagnosticsPlace                                          *:DiagnosticsPlace*
        Highlight the diagnostics from the current quickfix list. The command
        will first remove the highlightings that have been previously placed
        by the same command.

        By default the plugin will place only |signs| in the |sign-column|.
        Optionally, the error locations can also be highlighted in the text
        directly. Sign and text highlighting can be individually enabled or
        disabled in |g:qfdiagnostics| (see below).

:DiagnosticsClear                                          *:DiagnosticsClear*
        Remove the highlightings placed by |:DiagnosticsPlace|.

:DiagnosticsToggle                                        *:DiagnosticsToggle*
        Toggle the diagnostics from the quickfix list.

:LDiagnosticsPlace                                        *:LDiagnosticsPlace*
        Same as |:DiagnosticsPlace| but use the current location list of the
        current window. This command can be run in multiple windows to
        simultaneously highlight the diagnostics from several location lists.

:LDiagnosticsClear[!]                                     *:LDiagnosticsClear*
        Remove the highlightings placed by |:LDiagnosticsPlace|.

        Note: The command must be run in the same window where
        |:LDiagnosticsPlace| has been executed to remove the previously placed
        highlights.

        Add ! to remove the highlightings of all diagnostics from all location
        lists at once. This is like running |:LDiagnosticsClear| in every
        window where |:LDiagnosticsPlace| has been run.

:LDiagnosticsToggle                                      *:LDiagnosticsToggle*
        Toggle the diagnostics from the location list of the current window.

==============================================================================
CONFIGURATION                                          *qf-diagnostics-config*
                                                             *g:qfdiagnostics*

The appearance of the popup window as well as the signs and text highlights
can be configured through the |Dictionary| g:qfdiagnostics. The following keys
are supported:

    popup_scrollup                            *g:qfdiagnostics.popup_scrollup*
            Key for scrolling popup window up one text line.
            Default: CTRL-K

    popup_scrolldown                        *g:qfdiagnostics.popup_scrolldown*
            Key for scrolling popup window down one text line.
            Default: CTRL-J

    popup_maxheight                          *g:qfdiagnostics.popup_maxheight*
            Maximum height for the popup window. Set to zero to use as much
            space as available.
            Default: 0

    popup_maxwidth                            *g:qfdiagnostics.popup_maxwidth*
            Maximum width for the popup window. Set to zero to use as much
            space as available.
            Default: 0

    popup_border                                *g:qfdiagnostics.popup_border*
            List with numbers (0 or 1) specifying whether to draw a border
            around the popup window.
            Default: [0, 0, 0, 0]

    popup_borderchars                      *g:qfdiagnostics.popup_borderchars*
            List with eight characters for drawing the border around the popup
            window.
            Default: ['═', '║', '═', '║', '╔', '╗', '╝', '╚']

    popup_create_cb                          *g:qfdiagnostics.popup_create_cb*
            Callback function called after the popup window is created. The
            arguments are |window-ID| of the popup window, the |quickfix-ID|
            of the current quickfix or location list, and a boolean that
            indicates whether a quickfix or location list is used.
            Default: {-> 0}

    signs                                               *g:qfdiagnostics.sigs*
            Whether to highlight diagnostics in the |sign-column|.
            Default: |v:true|

    sign_priorities                          *g:qfdiagnostics.sign_priorities*
            Set the offset for sign priorities for quickfix and location-list
            items.
            Default: 10

            The plugin distinguishes between five different quickfix items:
                error (4), warning (3), info (2), note (1), misc (0)

            The numbers in the parentheses are added to the priority specified
            above. Thus, quickfix items of type "error" have priority 14.
            "misc" (miscellaneous) types are all items that don't have any of
            the other types (for example |:grep| items).

    sign_error                                    *g:qfdiagnostics.sign_error*
            Set the sign attributes for quickfix items of type "error". See
            the {dict} argument in |sign_define()| on how to set this option.
            Default: `{'text': 'E>', 'texthl': 'ErrorMsg'}`

    sign_warning                                *g:qfdiagnostics.sign_warning*
            Set sign attributes for quickfix items of type "warning".
            Default: `{'text': 'W>', 'texthl': 'WarningMsg'}`

    sign_info                                      *g:qfdiagnostics.sign_info*
            Set sign attributes for quickfix items of type "info".
            Default: `{'text': 'I>', 'texthl': 'MoreMsg'}`

    sign_note                                      *g:qfdiagnostics.sign_note*
            Set sign attributes for quickfix items of type "note".
            Default: `{'text': 'N>', 'texthl': 'Todo'}`

    sign_misc                                      *g:qfdiagnostics.sign_misc*
            Set sign attributes for quickfix items of type "misc". These are
            all items that don't have any of the other types (for example
            |:grep| items).
            Default: `{'text': '?>', 'texthl': 'Normal'}`

    texthl                                            *g:qfdiagnostics.texthl*
            Whether to highlight diagnostics in the text using
            |text-properties|.
            Default: |v:false|

    highlight_error                          *g:qfdiagnostics.highlight_error*
            Set the appearance of text-properties for quickfix items of type
            "error". See the {props} argument in |prop_type_add()| for more
            details.
            Default: `{'highlight': 'SpellBad', 'priority': 14, 'combine': 1}`

    highlight_warning                      *g:qfdiagnostics.highlight_warning*
            Set the appearance of text-properties for quickfix items of type
            "warning".
            Default: `{'highlight': 'SpellCap', 'priority': 13, 'combine': 1}`

    highlight_info                            *g:qfdiagnostics.highlight_info*
            Set the appearance of text-properties for quickfix items of type
            "info".
            Default: `{'highlight': 'SpellLocal', 'priority': 12, 'combine': 1}`

    highlight_note                            *g:qfdiagnostics.highlight_note*
            Set the appearance of text-properties for quickfix items of type
            "note".
            Default: `{'highlight': 'SpellRare', 'priority': 11, 'combine': 1}`

    highlight_misc                            *g:qfdiagnostics.highlight_misc*
            Set the appearance of text-properties for quickfix items of type
            "misc".
            Default: `{'highlight': 'Underlined', 'priority': 10, 'combine': 1}`

==============================================================================
EXAMPLES                                             *qf-diagnostics-examples*

1. Place the signs automatically after running |:make| or |:lmake|: >
    augroup qf-diagnostics-user
        autocmd!
        autocmd QuickfixCmdPost  make  DiagnosticsPlace
        autocmd QuickfixCmdPost lmake LDiagnosticsPlace
    augroup END
<
2. Enable border and use fancy border characters with round corners: >
    let g:qfdiagnostics = {
            \ 'popup_border': [],
            \ 'popup_borderchars': ['─', '│', '─', '│', '╭', '╮', '╯', '╰'],
            \ }
<
3. Toggle the diagnostics of the quickfix and location lists with <F7> and
   <F8>, respectively: >
    nnoremap <F7> <Cmd>DiagnosticsToggle<Cr>
    nnoremap <F8> <Cmd>LDiagnosticsToggle<Cr>
<
4. Add a callback function that highlights the warning type of gcc and clang
   compiler messages: >
    function s:popup_cb(winid, qfid, loclist) abort
        const title = a:loclist
                \ ? getloclist(0, {'title': 0, 'id': a:qfid}).title
                \ : getqflist({'title': 0, 'id': a:qfid}).title

        if title !~# '^:\=\%(gcc\|g++\|clang\|clang\)'
            return
        endif

        call matchadd('WarningMsg', '\[\zs.\{-}\ze]$', 10, -1,
                \ {'window': a:winid})
    endfunction

    let g:qfdiagnostics = {
            \ 'popup_create_cb': funcref('s:popup_cb')
            \ }
<
    This will highlight "-Wunused-parameter" in the popup window for compiler
    messages like: >
     warning: unused parameter 'out' [-Wunused-parameter]
<
5. Toggle the text highlighting on and off: >
    function s:diagnostics_toggle_props() abort
        let g:qfdiagnostics = get(g:, 'qfdiagnostics', {})
        let g:qfdiagnostics.texthl = get(g:qfdiagnostics, 'texthl', v:false)
                \ ? v:false
                \ : v:true
        DiagnosticsPlace
    endfunction

    command DiagnosticsToggleHl call s:diagnostics_toggle_props()
<
==============================================================================
POPUP HIGHLIGHTING                            *qf-diagnostics-popup-highlight*

The following highlighting groups are used in the popup window:

QfDiagnostics                                               *hl-QfDiagnostics*
                    Popup window background and error text. This is the
                    equivalent of the |hl-Normal| highlight group in regular
                    windows.
                    Default: |hl-Pmenu|

QfDiagnosticsBorder                                   *hl-QfDiagnosticsBorder*
                    Highlight group name for popup window border.
                    Default: |hl-Pmenu|

                    Note: The title of the popup window is set to the
                    |quickfix-title| of the current quickfix or location list.

QfDiagnosticsScrollbar                             *hl-QfDiagnosticsScrollbar*
                    Highlight group name for the |popup-scrollbar|. The
                    background color is what matters.
                    Default: |hl-PmenuSbar|

QfDiagnosticsThumb                                     *hl-QfDiagnosticsThumb*
                    Highlight group name for the |popup-scrollbar| thumb. The
                    background color is what matters.
                    Default: |hl-PmenuThumb|

QfDiagnosticsLineNr                                   *hl-QfDiagnosticsLineNr*
                    Error line and column number in the popup window.
                    Default: |hl-Directory|

QfDiagnosticsError                                     *hl-QfDiagnosticsError*
                    Highlight group name for error messages in the popup
                    window. Error messages are marked with "error" and an
                    optional error number.
                    Default: |hl-ErrorMsg|

QfDiagnosticsWarning                                 *hl-QfDiagnosticsWarning*
                    Same as |QfDiagnosticsError| but for warning messages.
                    Default: |hl-WarningMsg|

QfDiagnosticsInfo                                       *hl-QfDiagnosticsInfo*
                    Same as |QfDiagnosticsError| but for informational messages.
                    Default: |hl-MoreMsg|

QfDiagnosticsNote                                       *hl-QfDiagnosticsNote*
                    Same as |QfDiagnosticsError| but for note messages.
                    Default: |hl-Todo|

 vim:tw=78:et:ft=help:norl:
